create or replace PROCEDURE SYNC_MERGE_SKM1
IS

    CURSOR rec_cur IS
      SELECT SOURCE_GUID, OBJECT_NAME, PARENT_OBJECT_KEY, ULT_PARENT_OBJECT_KEY FROM SYNC_SKM_TEMP_NEW;

    TYPE s_gud_tabtype IS TABLE OF SYNC_SKM_TEMP_NEW.SOURCE_GUID%TYPE;
    TYPE oName_tabtype IS TABLE OF SYNC_SKM_TEMP_NEW.OBJECT_NAME%TYPE;
    TYPE pokey_tabtype IS TABLE OF SYNC_SKM_TEMP_NEW.PARENT_OBJECT_KEY%TYPE;
    TYPE upok_tabtype IS TABLE OF SYNC_SKM_TEMP_NEW.ULT_PARENT_OBJECT_KEY%TYPE;
  
    TSOURCE_GUID s_gud_tabtype;
    TOBJECT_NAME oName_tabtype;
    TPARENT_OBJECT_KEY pokey_tabtype;
    TULT_PARENT_OBJECT_KEY upok_tabtype;
    
BEGIN

  INSERT INTO SOURCE_KEY_MAP( SOURCE_KEY_MAP.OBJECT_KEY, SOURCE_KEY_MAP.PARENT_OBJECT_KEY, SOURCE_KEY_MAP.OBJECT_TYPE, SOURCE_KEY_MAP.SOURCE_GUID, SOURCE_KEY_MAP.SOURCE_SYSTEM, SOURCE_KEY_MAP.OBJECT_NAME, SOURCE_KEY_MAP.ULT_PARENT_OBJECT_KEY ) 
  SELECT  tmpSKM.OBJECT_KEY, tmpSKM.PARENT_OBJECT_KEY, tmpSKM.OBJECT_TYPE, tmpSKM.SOURCE_GUID, COALESCE(tmpSKM.SOURCE_SYSTEM, u'ERStudio'), tmpSKM.OBJECT_NAME, tmpSKM.ULT_PARENT_OBJECT_KEY  
  from SYNC_SKM_TEMP_NEW tmpSKM WHERE  NOT EXISTS ( SELECT NULL FROM   SOURCE_KEY_MAP skm WHERE  skm.SOURCE_GUID = tmpSKM.SOURCE_GUID );

    OPEN rec_cur;
    LOOP
        FETCH rec_cur BULK COLLECT INTO TSOURCE_GUID, TOBJECT_NAME, TPARENT_OBJECT_KEY, TULT_PARENT_OBJECT_KEY LIMIT 1000;
        EXIT WHEN TSOURCE_GUID.COUNT() = 0;

        FORALL i IN TSOURCE_GUID.FIRST .. TSOURCE_GUID.LAST
			UPDATE SOURCE_KEY_MAP SET 
			OBJECT_NAME = TOBJECT_NAME(i),
			PARENT_OBJECT_KEY = TPARENT_OBJECT_KEY(i),
            ULT_PARENT_OBJECT_KEY = TULT_PARENT_OBJECT_KEY(i)
            WHERE SOURCE_GUID = TSOURCE_GUID(i);
    END LOOP;
    CLOSE rec_cur;
END;


